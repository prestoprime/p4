//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.07.24 at 11:42:28 PM CEST 
//

package eu.prestoprime.model.ext.qa;

import java.io.Serializable;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

/**
 * <p>
 * Java class for WordLexiconType complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="WordLexiconType">
 *   &lt;complexContent>
 *     &lt;extension base="{urn:mpeg:mpeg7:schema:2004}LexiconType">
 *       &lt;sequence>
 *         &lt;element name="Token">
 *           &lt;complexType>
 *             &lt;simpleContent>
 *               &lt;extension base="&lt;urn:mpeg:mpeg7:schema:2004>WordType">
 *                 &lt;attribute name="linguisticUnit" default="word">
 *                   &lt;simpleType>
 *                     &lt;union>
 *                       &lt;simpleType>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                           &lt;enumeration value="word"/>
 *                           &lt;enumeration value="syllable"/>
 *                           &lt;enumeration value="morpheme"/>
 *                           &lt;enumeration value="phrase"/>
 *                           &lt;enumeration value="component"/>
 *                           &lt;enumeration value="stem"/>
 *                           &lt;enumeration value="affix"/>
 *                           &lt;enumeration value="nonspeech"/>
 *                           &lt;enumeration value="other"/>
 *                         &lt;/restriction>
 *                       &lt;/simpleType>
 *                       &lt;simpleType>
 *                         &lt;restriction base="{urn:mpeg:mpeg7:schema:2004}termAliasReferenceType">
 *                         &lt;/restriction>
 *                       &lt;/simpleType>
 *                       &lt;simpleType>
 *                         &lt;restriction base="{urn:mpeg:mpeg7:schema:2004}termURIReferenceType">
 *                         &lt;/restriction>
 *                       &lt;/simpleType>
 *                     &lt;/union>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *                 &lt;attribute name="representation" default="orthographic">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *                       &lt;enumeration value="orthographic"/>
 *                       &lt;enumeration value="nonorthographic"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *               &lt;/extension>
 *             &lt;/simpleContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *       &lt;attribute name="phoneticAlphabet" type="{urn:mpeg:mpeg7:schema:2004}phoneticAlphabetType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "WordLexiconType", propOrder = { "token" })
public class WordLexiconType extends LexiconType implements Serializable {

	private final static long serialVersionUID = 1L;
	@XmlElement(name = "Token", required = true)
	protected WordLexiconType.Token token;
	@XmlAttribute(name = "phoneticAlphabet")
	protected PhoneticAlphabetType phoneticAlphabet;

	/**
	 * Gets the value of the token property.
	 * 
	 * @return possible object is {@link WordLexiconType.Token }
	 * 
	 */
	public WordLexiconType.Token getToken() {
		return token;
	}

	/**
	 * Sets the value of the token property.
	 * 
	 * @param value
	 *            allowed object is {@link WordLexiconType.Token }
	 * 
	 */
	public void setToken(WordLexiconType.Token value) {
		this.token = value;
	}

	/**
	 * Gets the value of the phoneticAlphabet property.
	 * 
	 * @return possible object is {@link PhoneticAlphabetType }
	 * 
	 */
	public PhoneticAlphabetType getPhoneticAlphabet() {
		return phoneticAlphabet;
	}

	/**
	 * Sets the value of the phoneticAlphabet property.
	 * 
	 * @param value
	 *            allowed object is {@link PhoneticAlphabetType }
	 * 
	 */
	public void setPhoneticAlphabet(PhoneticAlphabetType value) {
		this.phoneticAlphabet = value;
	}

	/**
	 * <p>
	 * Java class for anonymous complex type.
	 * 
	 * <p>
	 * The following schema fragment specifies the expected content contained
	 * within this class.
	 * 
	 * <pre>
	 * &lt;complexType>
	 *   &lt;simpleContent>
	 *     &lt;extension base="&lt;urn:mpeg:mpeg7:schema:2004>WordType">
	 *       &lt;attribute name="linguisticUnit" default="word">
	 *         &lt;simpleType>
	 *           &lt;union>
	 *             &lt;simpleType>
	 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
	 *                 &lt;enumeration value="word"/>
	 *                 &lt;enumeration value="syllable"/>
	 *                 &lt;enumeration value="morpheme"/>
	 *                 &lt;enumeration value="phrase"/>
	 *                 &lt;enumeration value="component"/>
	 *                 &lt;enumeration value="stem"/>
	 *                 &lt;enumeration value="affix"/>
	 *                 &lt;enumeration value="nonspeech"/>
	 *                 &lt;enumeration value="other"/>
	 *               &lt;/restriction>
	 *             &lt;/simpleType>
	 *             &lt;simpleType>
	 *               &lt;restriction base="{urn:mpeg:mpeg7:schema:2004}termAliasReferenceType">
	 *               &lt;/restriction>
	 *             &lt;/simpleType>
	 *             &lt;simpleType>
	 *               &lt;restriction base="{urn:mpeg:mpeg7:schema:2004}termURIReferenceType">
	 *               &lt;/restriction>
	 *             &lt;/simpleType>
	 *           &lt;/union>
	 *         &lt;/simpleType>
	 *       &lt;/attribute>
	 *       &lt;attribute name="representation" default="orthographic">
	 *         &lt;simpleType>
	 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
	 *             &lt;enumeration value="orthographic"/>
	 *             &lt;enumeration value="nonorthographic"/>
	 *           &lt;/restriction>
	 *         &lt;/simpleType>
	 *       &lt;/attribute>
	 *     &lt;/extension>
	 *   &lt;/simpleContent>
	 * &lt;/complexType>
	 * </pre>
	 * 
	 * 
	 */
	@XmlAccessorType(XmlAccessType.FIELD)
	@XmlType(name = "", propOrder = { "value" })
	public static class Token implements Serializable {

		private final static long serialVersionUID = 1L;
		@XmlValue
		protected String value;
		@XmlAttribute(name = "linguisticUnit")
		protected String linguisticUnit;
		@XmlAttribute(name = "representation")
		@XmlJavaTypeAdapter(CollapsedStringAdapter.class)
		protected String representation;

		/**
		 * Gets the value of the value property.
		 * 
		 * @return possible object is {@link String }
		 * 
		 */
		public String getValue() {
			return value;
		}

		/**
		 * Sets the value of the value property.
		 * 
		 * @param value
		 *            allowed object is {@link String }
		 * 
		 */
		public void setValue(String value) {
			this.value = value;
		}

		/**
		 * Gets the value of the linguisticUnit property.
		 * 
		 * @return possible object is {@link String }
		 * 
		 */
		public String getLinguisticUnit() {
			if (linguisticUnit == null) {
				return "word";
			} else {
				return linguisticUnit;
			}
		}

		/**
		 * Sets the value of the linguisticUnit property.
		 * 
		 * @param value
		 *            allowed object is {@link String }
		 * 
		 */
		public void setLinguisticUnit(String value) {
			this.linguisticUnit = value;
		}

		/**
		 * Gets the value of the representation property.
		 * 
		 * @return possible object is {@link String }
		 * 
		 */
		public String getRepresentation() {
			if (representation == null) {
				return "orthographic";
			} else {
				return representation;
			}
		}

		/**
		 * Sets the value of the representation property.
		 * 
		 * @param value
		 *            allowed object is {@link String }
		 * 
		 */
		public void setRepresentation(String value) {
			this.representation = value;
		}

	}

}
